@import "variables.scss";
.gecko-grid-layout {
	display: grid;
	grid-template-columns: repeat(12, minmax(1rem, 1fr));
	grid-gap: 1rem;
	grid-auto-rows: minmax(calc(100vw/12), auto);
	grid-auto-flow: dense;

	@media (max-width: $bp-tablet) {
		grid-template-columns: minmax(0px, 1fr) !important;
		grid-auto-rows: minmax(calc(100vw/2), auto) !important;
	}

	@media (max-width: $bp-mobile) {
		grid-template-columns: minmax(0px, 1fr) !important;
		grid-auto-rows: minmax(calc(100vw/2), auto) !important;
	}

	&__item {
		grid-column-end: span 4;
		grid-row-end: span 1;
		@media (max-width: $bp-mobile) {
			grid-column: 1 / -1 !important;
		}
	}
}

.gecko-grid-layout-item {
	position: relative;
	z-index: 1;
}

.gecko-grid-layout-basic {
	position: relative;
	z-index: 1;
}

.gecko-grid-layout-image {
	position: relative;
	z-index: 1;
	min-height: 200px;
	&__image {
		position: absolute;
		height: 100% !important; // For editor at the moment. Will need to be removed.
		width: 100% !important; // For editor at the moment. Will need to be removed.
		object-fit: cover;
		object-position: center;
		z-index: -1;
	}
	&__caption {
		padding: 1rem;
		position: relative;
		display: flex;
		flex-direction: column;
		justify-content: center;
		min-height: inherit;
		height: 100%;
		width: 100%;
		background-color: rgba(255, 255, 255, 0.75);
	}
	&.is-style-hover & {
		&__caption {
			opacity: 0;
			transition: all 250ms ease-in-out;
		}
	}
	&:hover & {
		&__caption {
			opacity: 1;
		}
	}
}
